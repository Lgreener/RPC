/*************************************************************

 * Generated by rocket framework rocket_generator.py
 * Create Time: ${CREATE_TIME}
 * This file will not be overwrite althrough protobuf file changed !!!
 * Just write this file while not exist
 * File Name: ${FILE_NAME}
 * Create Time: ${CREATE_TIME}
 * Allow Edit: True
*************************************************************/


#include <google/protobuf/service.h>
#include "rocket/common/config.h"
#include "rocket/common/log.h"
#include "rocket/net/tcp/net_addr.h"
#include "rocket/net/tcp/tcp_server.h"
#include "rocket/net/rpc/rpc_dispatcher.h"
${INCLUDE_SERVER_HEADER}

int main(int argc, char* argv[]) {
  if (argc != 2) {
    printf("Start ${PROJECT_NAME} server error, input argc is not 2! \n");
    printf("Start ${PROJECT_NAME} like this: \n");
    printf("./${PROJECT_NAME} ../conf/${PROJECT_NAME}.xml \n");
    return 0;
  }

  rocket::Config::SetGlobalConfig(argv[1]);

  rocket::Logger::InitGlobalLogger();

  rocket::RpcDispatcher::GetRpcDispatcher()->registerService(std::make_shared<${PROJECT_NAME}::${CLASS_NAME}>());

  rocket::IPNetAddr::s_ptr addr = std::make_shared<rocket::IPNetAddr>("127.0.0.1",rocket::Config::GetGobalConfig()->m_port);
  
  rocket::TcpServer tcp_server(addr);

  tcp_server.start();

  return 0;

}